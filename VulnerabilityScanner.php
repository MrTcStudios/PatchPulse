<?php
include("config.php");
?>
<!doctype html>
<html>
    <head>
        <link rel="stylesheet" type="text/css" href="css/style.css" />
        <link rel="stylesheet" type="text/css" href="css/cssfx.css" />
        <title>PatchPulse - Account</title>
        <meta charset="UTF-8" />
    </head>
    <body>
        <section class="layout1">
            <div class="header">
                <img
                    class="headerIcon"
                    src="images/PatchPulseLogo.svg"
                    alt="CentredLogo"
                />
                <span
                    ><a href="https://mrtc.cc" class="headerButton">Home</a></span
                >
                        <!-- Inizio V3.8-->
                        <span><div class="dropdown">
                            <a href="#" class="headerButton">Tool</a>
                            <div class="dropdown-content">
                                <a href="#">Fast Scan</a>
                                <a href="#">Web Scan</a>
                                <a href="#">Port Scan</a>
                                <a href="#">Custom Scan</a>
                            </div>
                        </div></span>
                        <!-- Fine V3.8-->
                <span
                    ><a href="mailto:support@mrtc.cc" class="headerButton"
                        >Contact Us</a
                    ></span
                >
                <?php if (isset($_SESSION['user_id'])): ?>
                        <!-- Se l'utente è loggato, mostra "ACCOUNT" -->
                        <button class="inout-button" onclick="window.location.href='accountPage.php'">Account</button>
                    <?php else: ?>
                        <!-- Se l'utente non è loggato, mostra "LOGIN" -->
                        <button class="inout-button" onclick="window.location.href='loginPage.php'">Log In / Sign Up</button>
                    <?php endif; ?>
            </div>

            

<div class="scan-form-container">
    <form class="scan-form">
        <input
            type="url"
            class="scan-input"
            placeholder="Enter URL to scan (example: https://example.com)"
            required
        />
        <div class="error-message"></div>
        <hr class="scan-line" />
        
        <div class="scan-legal-container">
            <div class="scan-legal-line">
                <span class="p2">I have legal permission to scan this website</span>
            </div>
            <div class="scan-legal-line">
                <span class="p2">and I accept the</span>
                <a href="policy/terms_and_conditions.php" target="_blank" class="scan-terms-link">Terms and Conditions</a>
                <input
                    type="checkbox"
                    name="AgreeTerms"
                    id="legalConsent"
                    required
                    class="terms-checkbox"
                />
            </div>
        </div>
        
        <button type="submit" class="scan-button">SCAN NOW</button>
    </form>
</div>

            

            <div class="scan-results-container">
                <div class="scan-results-box">
                    <!-- Scan logs vengono inseriti qui -->
                </div>
            </div>
        </section>

        <hr class="sectionLine" />
        <div class="fot1">
            <ul>
                <li>
                    <img class="arrowsFot" src="images/arrow1.png" alt="" />
                    <a href="" class="faqButton">Github</a>
                </li>
                <li>
                    <img class="arrowsFot" src="images/arrow1.png" alt="" />
                    <a href="" class="faqButton">Contact Us</a>
                </li>
                <li>
                    <img class="arrowsFot" src="images/arrow1.png" alt="" />
                    <a href="" class="faqButton">Our Organization</a>
                </li>
            </ul>
        </div>
        <hr class="sectionLine" />
        <script src="script.js"></script>
        <script>
let scanId = null;
let lastOutputLength = 0; // Variabile per tracciare l'ultimo output processato

document.querySelector(".scan-form").addEventListener("submit", function(e) {
    e.preventDefault();

    const urlInput = this.querySelector(".scan-input");
    const errorMessage = this.querySelector(".error-message");
    const resultsContainer = document.querySelector(".scan-results-container");
    const legalConsentCheckbox = document.querySelector("#legalConsent");

    try {
        const url = new URL(urlInput.value);
        const hostname = url.hostname.toLowerCase();

        // Verifica se l'URL contiene localhost o 127.0.0.1
        if (hostname === "localhost" || hostname === "127.0.0.1" || hostname.includes("localhost")) {
            throw new Error("Non è consentito scansionare localhost o indirizzi locali");
        }

        if (url.protocol !== "http:" && url.protocol !== "https:") {
            throw new Error("URL must start with http:// or https://");
        }

        errorMessage.textContent = "";
        errorMessage.classList.remove("active");
        resultsContainer.innerHTML = '<div class="scan-results-box"></div>';
        resultsContainer.classList.add("active");


        if (!legalConsentCheckbox.checked) {
            errorMessage.textContent = "Devi accettare i Termini e Condizioni per procedere.";
            errorMessage.classList.add("active");
            resultsContainer.classList.remove("active");
            return;
        }
        
        startScan(url.href);
        
    } catch (err) {
        errorMessage.textContent = err.message || "Please enter a valid URL (e.g., https://example.com)";
        errorMessage.classList.add("active");
        resultsContainer.classList.remove("active");
    }
});

function addLogMessage(message) {
    const resultsBox = document.querySelector(".scan-results-box");
    const timestamp = new Date().toLocaleTimeString();
    const logEntry = document.createElement("div");
    logEntry.className = "scan-log";
    logEntry.innerHTML = `
        <span class="timestamp">[${timestamp}]</span>
        <span class="log-message">${message}</span>
    `;
    resultsBox.appendChild(logEntry);
    resultsBox.scrollTop = resultsBox.scrollHeight;
}

function startScan(target) {
    // Rimuove lo slash finale se presente
    target = target.replace(/\/?(\?.*)?$/, '');

    addLogMessage("Initiating scan...");
    
    fetch('start_scan.php', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({ target: target })
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            addLogMessage(`Error: ${data.error}`);
            return;
        }
        scanId = data.scanId;
        addLogMessage("Scan started successfully");
        pollResults();
    })
    .catch(error => {
        addLogMessage(`Error starting scan: ${error.message}`);
    });
}

function pollResults() {
    if (!scanId) return;
    
    fetch(`get_results.php?scanId=${scanId}`)
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            addLogMessage(`Error: ${data.error}`);
            return;
        }

        if (data.output) {
            const lines = data.output.split('\n');
            // Mostra solo le nuove linee
            const newLines = lines.slice(lastOutputLength);
            newLines.forEach(line => {
                if (line.trim()) {
                    addLogMessage(line.trim());
                }
            });
            lastOutputLength = lines.length;
        }

        if (!data.completed) {
            setTimeout(pollResults, 1000);
        } else {
            addLogMessage("Scan completed");
        }
    })
    .catch(error => {
        addLogMessage(`Error retrieving results: ${error.message}`);
    });
}

// Modifica anche la validazione in tempo reale
document.querySelector(".scan-input").addEventListener("input", function() {
    const errorMessage = document.querySelector(".error-message");

    if (this.value.length > 0) {
        try {
            const url = new URL(this.value);
            const hostname = url.hostname.toLowerCase();
            
            // Verifica localhost o 127.0.0.1
            if (hostname === "localhost" || hostname === "127.0.0.1" || hostname.includes("localhost")) {
                errorMessage.textContent = "Non è consentito scansionare localhost o indirizzi locali";
                errorMessage.classList.add("active");
                return;
            }
            
            if (url.protocol === "http:" || url.protocol === "https:") {
                errorMessage.textContent = "";
                errorMessage.classList.remove("active");
                return;
            }
        } catch (err) {
            if (this.value.startsWith("http:") || this.value.startsWith("https:")) {
                errorMessage.textContent = "Invalid URL format";
                errorMessage.classList.add("active");
            }
        }
    } else {
        errorMessage.textContent = "";
        errorMessage.classList.remove("active");
    }
});
</script>
    </body>
</html>

